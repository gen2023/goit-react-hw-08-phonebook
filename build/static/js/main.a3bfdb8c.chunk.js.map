{"version":3,"sources":["redux/authorization/authorization-selectors.js","components/Entered/Entered.js","services/routes.js","components/UserRoom/UserRoom.js","components/Navigation/Navigation.js","components/AppBar/AppBar.js","services/PrivateRoute.js","services/PublicRoute.js","components/App.js","redux/contacts/contacts-reduser.js","redux/authorization/authorization-reducer.js","redux/store.js","index.js","redux/authorization/authorization-operations.js","components/Loader/Loader.js","redux/authorization/authorization-actions.js","redux/contacts/contacts-actions.js"],"names":["getIsAutorization","state","Boolean","authorization","token","getUsername","user","name","mapDispatchToProps","onLogout","authOperations","logOut","connect","className","type","onClick","UserRoom","to","routes","activeClassName","isAutorization","exact","AppBar","isAuthenticated","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","PhonebookPage","AccountPage","NotFoundPage","App","this","onGetCurretnUser","fallback","Loader","path","getCurrentUser","items","createReducer","listContactSuccess","_","payload","saveContactSuccess","removeContactSuccess","filter","id","loading","listContactRequest","listContactError","saveContactRequest","saveContactError","removeContactRequest","removeContactError","changeFilter","combineReducers","initialUserState","email","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","setError","error","registerError","loginError","logoutError","getCurrentUserError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","message","logoutRequest","logIn","loginRequest","getState","persistedToken","getCurrentUserRequest","get","color","height","width","timeout","createAction"],"mappings":"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","file":"static/js/main.a3bfdb8c.chunk.js","sourcesContent":["export const getIsAutorization = (state) => Boolean(state.authorization.token);\nexport const getUsername = (state) => state.authorization.user.name;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getUsername } from \"../../redux/authorization/authorization-selectors\";\nimport authOperations from \"../../redux/authorization/authorization-operations\";\nimport \"./Entered.css\";\n\nconst Entered = ({ name, onLogout }) => (\n  <div className=\"LogoutContainer\">\n    <span>\n      Welcome, <span className=\"name\">{name}</span>\n    </span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\nconst mapStateToProps = (state) => ({\n  name: getUsername(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Entered);\n","export default {\n  homePage: \"/\",\n  phonebookPage: \"/phonebook\",\n  userRoom: \"/account\",\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../services/routes\";\nimport \"./UserRoom.css\";\n\nconst UserRoom = () => (\n  <>\n    <NavLink to={routes.userRoom} className=\"nav_link\" activeClassName=\"active\">\n      Личный кабинет\n    </NavLink>\n  </>\n);\n\nexport default UserRoom;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Entered from \"../Entered\";\nimport UserRoom from \"../UserRoom\";\n\nimport routes from \"../../services/routes\";\nimport { getIsAutorization } from \"../../redux/authorization/authorization-selectors\";\nimport \"./navigation.css\";\n\nconst Navigation = ({ isAutorization }) => {\n  return (\n    <nav className=\"nav\">\n      <NavLink\n        exact\n        to={routes.homePage}\n        className=\"nav_link\"\n        activeClassName=\"active\"\n      >\n        Главная\n      </NavLink>\n      {isAutorization ? (\n        <>\n          <NavLink\n            to={routes.phonebookPage}\n            className=\"nav_link\"\n            activeClassName=\"active\"\n          >\n            Телефонная книга\n          </NavLink>\n          <Entered />\n        </>\n      ) : (\n        <UserRoom />\n      )}\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  isAutorization: getIsAutorization(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from \"react\";\nimport Navigation from \"../Navigation\";\n\nconst AppBar = () => {\n  return (\n    <>\n      <header className=\"AppBar\">\n        <Navigation />\n      </header>\n    </>\n  );\n};\n\nexport default AppBar;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getIsAutorization } from \"../redux/authorization/authorization-selectors\";\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: getIsAutorization(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getIsAutorization } from \"../redux/authorization/authorization-selectors\";\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: getIsAutorization(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport AppBar from \"./AppBar\";\nimport Loader from \"./Loader/Loader\";\nimport routes from \"../services/routes\";\nimport authOperations from \"../redux/authorization/authorization-operations\";\nimport PrivateRoute from \"../services/PrivateRoute\";\nimport PublicRoute from \"../services/PublicRoute\";\n\nconst HomePage = lazy(() => import(\"../pages/HomePage.js\"));\nconst PhonebookPage = lazy(() => import(\"../pages/PhonebookPage.js\"));\nconst AccountPage = lazy(() => import(\"../pages/AccountPage.js\"));\nconst NotFoundPage = lazy(() => import(\"../pages/NotFoundPage.js\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path={routes.homePage} component={HomePage} />\n            <PrivateRoute\n              path={routes.phonebookPage}\n              redirectTo={routes.userRoom}\n              component={PhonebookPage}\n            />\n\n            <PublicRoute\n              restricted\n              path={routes.userRoom}\n              redirectTo={routes.phonebookPage}\n              component={AccountPage}\n            />\n\n            <Route component={NotFoundPage} />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport {\n  listContactRequest,\n  listContactSuccess,\n  listContactError,\n  saveContactRequest,\n  saveContactSuccess,\n  saveContactError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [listContactSuccess]: (_, { payload }) => payload,\n  [saveContactSuccess]: (state, { payload }) => [...state, payload],\n  [removeContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\nconst loading = createReducer(false, {\n  [listContactRequest]: () => true,\n  [listContactSuccess]: () => false,\n  [listContactError]: () => false,\n  [saveContactRequest]: () => true,\n  [saveContactSuccess]: () => false,\n  [saveContactError]: () => false,\n  [removeContactRequest]: () => true,\n  [removeContactSuccess]: () => false,\n  [removeContactError]: () => false,\n});\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./authorization-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/contacts-reduser\";\nimport authReducer from \"./authorization/authorization-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    authorization: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nimport \"./style.css\";\nimport \"./pages/stylePages.css\";\nimport \"../node_modules/modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./authorization-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\n/*\n * POST @ /users/signup\n * body { name, email, password }\n *\n * После успешной регистрации добавляем токен в HTTP-заголовок\n */\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(registerRequest());\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error.message));\n  }\n};\n\n/*\n * POST @ /users/login\n * body:\n *    { email, password }\n *\n * После успешного логина добавляем токен в HTTP-заголовок\n */\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(loginRequest());\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error.message));\n  }\n};\n\n/*\n * POST @ /users/logout\n * headers:\n *    Authorization: Bearer token\n *\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\n */\nconst logOut = () => async (dispatch) => {\n  dispatch(logoutRequest());\n  try {\n    const response = await axios.post(\"/users/logout\");\n    token.unset();\n    dispatch(logoutSuccess(response.data));\n  } catch (error) {\n    dispatch(logoutError(error.message));\n  }\n};\n\n/*\n * GET @ /users/current\n * headers:\n *    Authorization: Bearer token\n *\n * 1. Забираем токен из стейта через getState()\n * 2. Если токена нет, выходим не выполняя никаких операций\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\n */\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    authorization: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logOut, logIn, getCurrentUser };\n","import React from 'react';\nimport LoaderSpiner from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <LoaderSpiner\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  );\n};\n\nexport default Loader;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const registerRequest = createAction(\"authorization/registerRequest\");\nexport const registerSuccess = createAction(\"authorization/registerSuccess\");\nexport const registerError = createAction(\"authorization/registerError\");\n\nexport const loginRequest = createAction(\"authorization/loginRequest\");\nexport const loginSuccess = createAction(\"authorization/loginSuccess\");\nexport const loginError = createAction(\"authorization/loginError\");\n\nexport const logoutRequest = createAction(\"authorization/logoutRequest\");\nexport const logoutSuccess = createAction(\"authorization/logoutSuccess\");\nexport const logoutError = createAction(\"authorization/logoutError\");\n//получить текущего\nexport const getCurrentUserRequest = createAction(\n  \"authorization/getCurrentUserRequest\"\n);\nexport const getCurrentUserSuccess = createAction(\n  \"authorization/getCurrentUserSuccess\"\n);\nexport const getCurrentUserError = createAction(\n  \"authorization/getCurrentUserError\"\n);\n\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const listContactRequest = createAction('contacts/listContactRequest');\nexport const listContactSuccess = createAction('contacts/listContactSuccess');\nexport const listContactError = createAction('contacts/listContactError');\n\nexport const saveContactRequest = createAction('contacts/saveContactRequest');\nexport const saveContactSuccess = createAction('contacts/saveContactSuccess');\nexport const saveContactError = createAction('contacts/saveContactError');\n\nexport const removeContactRequest = createAction(\n  'contacts/removeContactRequest',\n);\nexport const removeContactSuccess = createAction(\n  'contacts/removeContactSuccess',\n);\nexport const removeContactError = createAction('contacts/removeContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n"],"sourceRoot":""}