{"version":3,"sources":["components/UserRoom/Login/Login.js","components/UserRoom/Register/Register.js","pages/AccountPage.js"],"names":["Login","state","email","password","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","this","onSubmit","autoComplete","className","type","onChange","Component","mapDispatchToProps","authOperations","logIn","connect","Register","onRegister","register","AccountPage"],"mappings":"kOAKMA,E,4MAIJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,QAAQ,EAAKZ,OAExB,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EACqBW,KAAKb,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SAEf,OACE,oCACE,oJACA,iGACA,0BAAMY,SAAUD,KAAKL,aAAcO,aAAa,OAC9C,yBAAKC,UAAU,cACb,iEACA,2BACEC,KAAK,QACLZ,KAAK,QACLC,MAAOL,EACPiB,SAAUL,KAAKV,gBAGnB,yBAAKa,UAAU,cACb,wEACA,2BACEC,KAAK,WACLZ,KAAK,WACLC,MAAOJ,EACPgB,SAAUL,KAAKV,gBAGnB,4BAAQa,UAAU,qBAAqBC,KAAK,UAA5C,wC,GA/CUE,aAwDdC,EAAqB,CACzBR,QAASS,IAAeC,OAGXC,cAAQ,KAAMH,EAAdG,CAAkCxB,GC5D3CyB,E,4MAIJxB,MAAQ,CACNK,KAAM,GACNJ,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMc,WAAW,EAAKzB,OAE3B,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EAC2BW,KAAKb,MAA/BK,EADD,EACCA,KAAMJ,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,oCACE,uIACA,iGACA,0BAAMY,SAAUD,KAAKL,aAAcO,aAAa,OAC9C,yBAAKC,UAAU,cACb,qDACA,2BACEC,KAAK,OACLZ,KAAK,OACLC,MAAOD,EACPa,SAAUL,KAAKV,gBAGnB,yBAAKa,UAAU,cACb,iEACA,2BACEC,KAAK,QACLZ,KAAK,QACLC,MAAOL,EACPiB,SAAUL,KAAKV,gBAGnB,yBAAKa,UAAU,cACb,wEACA,2BACEC,KAAK,WACLZ,KAAK,WACLC,MAAOJ,EACPgB,SAAUL,KAAKV,gBAInB,4BAAQa,UAAU,wBAAwBC,KAAK,UAA/C,sH,GA1DaE,aAmEjBC,EAAqB,CACzBK,WAAYJ,IAAeK,UAGdH,cAAQ,KAAMH,EAAdG,CAAkCC,GC7DlCG,UAXK,kBAClB,yBAAKX,UAAU,0BACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,gBACb,kBAAC,EAAD","file":"static/js/4.cab5741f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport authOperations from '../../../redux/authorization/authorization-operations';\n\nclass Login extends Component {\n  static propTypes = {\n    onLogin: propTypes.func.isRequired,\n  };\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onLogin(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <>\n        <h1>Я уже зарегистрирован</h1>\n        <p>Авторизация</p>\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <div className=\"form-group\">\n            <label>Почта</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Пароль </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </div>\n          <button className=\"submit submitLogin\" type=\"submit\">\n            Войти\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport authOperations from '../../../redux/authorization/authorization-operations';\n\nclass Register extends Component {\n  static propTypes = {\n    onRegister: propTypes.func.isRequired,\n  };\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <>\n        <h1>Новый пользователь</h1>\n        <p>Регистрация</p>\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <div className=\"form-group\">\n            <label>Имя</label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Почта</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Пароль </label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <button className=\"submit submitRegister\" type=\"submit\">\n            Зарегистрироваться\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n","import React from \"react\";\r\nimport Login from \"../components/UserRoom/Login\";\r\nimport Register from \"../components/UserRoom/Register\";\r\n\r\nconst AccountPage = () => (\r\n  <div className=\"content contentAccount\">\r\n    <div className=\"leftContent\">\r\n      <Register />\r\n    </div>\r\n    <div className=\"rightContent\">\r\n      <Login />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AccountPage;\r\n"],"sourceRoot":""}